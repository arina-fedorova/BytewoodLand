// <auto-generated />
using System;
using Authix.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Authix.Data.Migrations
{
    [DbContext(typeof(AuthixDbContext))]
    [Migration("20250412130337_AddRefreshToken")]
    partial class AddRefreshToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Authix.Auth.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "$2a$11$GpbeYv4my6ggMt/7NUrzn..Rj8oI9Tu7kbkKgNu7HuIfuj/UFfela",
                            Role = 2,
                            Username = "Squee"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "$2a$11$OceXakLyDTP6Q4CoPyLO5.sYK4KQXEkpQ6nz1zhhQGb/CSZhcOz4a",
                            Role = 2,
                            Username = "Owla"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "$2a$11$9Z.uzQykMRtMsIxe4ti0jeMhYwPUAMlYIqFYDkijtgnPptOE8rBeG",
                            Role = 1,
                            Username = "Casha"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "$2a$11$Ny4tc67XIGBT4.CAAiVXru27HyPgBBjDM0AXxb408XxiZa6o03Lsq",
                            Role = 2,
                            Username = "Tweetle"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "$2a$11$fx2g3etcB/lrB6FGpJLVhOXW0WumAnUnazM.CWVqR/cImt0Z8u266",
                            Role = 1,
                            Username = "Grizzle"
                        });
                });

            modelBuilder.Entity("Authix.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Authix.Data.Models.RefreshToken", b =>
                {
                    b.HasOne("Authix.Auth.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Authix.Auth.Models.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
