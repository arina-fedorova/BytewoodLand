// <auto-generated />
using System;
using Authix.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Authix.Data.Migrations
{
    [DbContext(typeof(AuthixDbContext))]
    partial class AuthixDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Authix.Auth.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "$2a$11$VNEkBrgMJXymYqcS65NtL.m1qR9.wz4d4Svt99fPgCumBvRlpeA2i",
                            Role = 2,
                            Username = "Squee"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "$2a$11$fW9uzlJELZtueHcI.x5RsuZoFHBZ2dt8SqTiHIex8.NMQYiXw.GOK",
                            Role = 2,
                            Username = "Owla"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "$2a$11$I0Nb2ZI71zphHUoodfIoOuTUbV2iE9eVW072QRe/2R83Ieg81pSPi",
                            Role = 1,
                            Username = "Casha"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "$2a$11$kbVYSybvTkntkWq1FEz2b.KAjCKPsMSwyhJuJdSANUO2Mb3K9Mfmy",
                            Role = 2,
                            Username = "Tweetle"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "$2a$11$ZGiexl2jEVGlFU/JJ8LFiuNdCvsZlWOTi27XS4YqVx3zX6lOCIga6",
                            Role = 1,
                            Username = "Grizzle"
                        });
                });

            modelBuilder.Entity("Authix.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Authix.Data.Models.RefreshToken", b =>
                {
                    b.HasOne("Authix.Auth.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Authix.Auth.Models.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
